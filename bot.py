import os
import logging
import asyncio

from aiohttp import web
from aiogram import Bot, Dispatcher
from aiogram.filters import Command
from aiogram.types import Message, InputFile
from aiogram.webhook.aiohttp_server import SimpleRequestHandler
from yt_dlp import YoutubeDL

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN   = os.getenv("BOT_TOKEN")
WEBHOOK_URL = os.getenv("WEBHOOK_URL")   # https://<your-service>.onrender.com/webhook
PORT        = int(os.getenv("PORT", 8443))  # Telegram –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç 443,80,88,8443
DOWNLOADS   = "downloads"

if not BOT_TOKEN or not WEBHOOK_URL:
    logging.error("‚ùå –ó–∞–¥–∞–π—Ç–µ –≤ ENV BOT_TOKEN –∏ WEBHOOK_URL!")
    exit(1)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=BOT_TOKEN)
dp  = Dispatcher()

# –ü–∞–ø–∫–∞ –¥–ª—è —Å–∫–∞—á–∞–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ
os.makedirs(DOWNLOADS, exist_ok=True)

# –û–ø—Ü–∏–∏ yt-dlp
YDL_OPTS = {
    "format": "bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best",
    "outtmpl": f"{DOWNLOADS}/%(title).50s.%(ext)s",
    "noplaylist": True,
    "quiet": True,
}

@dp.message(Command("start"))
async def cmd_start(message: Message):
    await message.reply(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø —Å–∫–∞—á–∏–≤–∞—é –≤–∏–¥–µ–æ –∏–∑ YouTube, TikTok, Instagram –∏ Pinterest.\n"
        "–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É.\n"
        "‚ö†Ô∏è –ú–∞–∫—Å–∏–º—É–º 50 –ú–ë –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ —á–∞—Ç ‚Äî –µ—Å–ª–∏ –±–æ–ª—å—à–µ, –¥–∞–º –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É."
    )

@dp.message()
async def download_handler(message: Message):
    url = message.text.strip()
    if not url.startswith("http"):
        return await message.reply("‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É.")

    await message.reply("‚è≥ –°–∫–∞—á–∏–≤–∞—é‚Ä¶")
    filename = None

    try:
        with YoutubeDL(YDL_OPTS) as ydl:
            info = ydl.extract_info(url, download=True)
            filename = ydl.prepare_filename(info)

        size = os.path.getsize(filename)
        if size <= 50 * 1024 * 1024:
            video = InputFile(path_or_bytesio=filename)
            await message.reply_video(video)
        else:
            public_url = WEBHOOK_URL.rsplit("/webhook", 1)[0] + f"/{os.path.basename(filename)}"
            await message.reply(
                f"‚úÖ –í–∏–¥–µ–æ —Å–∫–∞—á–∞–Ω–æ ({size//
